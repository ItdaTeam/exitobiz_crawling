<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.kr.exitobiz.Mappers.WebApp.SavedMapper">

    <select id="getRecentlyMySavedBook" parameterType="HashMap" resultType="hashMap">
        select si.si_idx, si.target_name, si.target_cat_cd as target_cat_name, si.target_cost_value, si.loc_code, si.si_title, si.mobile_url, si.si_end_dt, si.view_cnt,
               mb.mb_save_yn, mb.mb_req_save_yn, mb.mb_done_save_yn,
               tl.tl_cret_dt
        from (
                select row_number() over (partition by tl_type_cd order by  tl_cd desc, tl_cret_dt desc, tl_page_depth desc ) as sort,
                tl_cret_dt, tl_type_cd, tl_cret_id
                from itda_app.time_line
                where 1=1
                and tl_type_cd != 0
                and tl_cret_id = #{user_id}
                order by tl_cd desc
        ) tl
        left outer join itda_app.support_info si on tl.tl_type_cd = si.si_idx
        left outer join ( select  row_number() over (partition by mb_addidx order by  mb_cret_dt desc) as sort, mb_save_yn,mb_req_save_yn,mb_done_save_yn,mb_addidx,mb_cret_id
        from itda_app.my_bookmark  ) mb on mb.mb_addidx = si.si_idx and mb.mb_cret_id = tl_cret_id and mb.sort=1
        where 1=1
        and tl.sort=1
        and si.si_active_yn = 'Y'
        <if test='ord != null'>
            <choose>
                <when test="ord == '인기순'">
                    order by  view_cnt desc
                </when>
                <when test="ord == '금액높은순'">
                    order by  target_cost_value desc
                </when>
                <when test="ord == '마감임박순'">
                    order by si_end_dt
                </when>
                <otherwise>
                    order by tl_cret_dt desc
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="getMySavedBook" resultType="HashMap" parameterType="HashMap">
        select  mb.*, si_idx, target_name, target_cost_value, loc_code, si_title, mobile_url, pc_url, si_end_dt, si_cret_dt, si_active_yn, view_cnt, share_cnt, save_cnt, naughty_cnt, lovely_cnt, dandy_cnt, happy_cnt, from_dt, to_dt, business_type, start_period, company_type, business_ctg, tech_ctg, target_cat_cd as target_cat_name
, tl.tl_cret_dt
        from itda_app.my_bookmark mb
        left outer join itda_app.support_info si on mb.mb_addidx = si.si_idx
        left outer join (
                select
                row_number() over (partition by tl_type_cd order by tl_cret_dt, tl_page_depth desc ) as sort
                ,tl_cret_dt, tl_type_cd,tl_cret_id
                from itda_app.time_line
                where 1=1
                and tl_type_cd != 0
                and tl_cret_id = #{user_id}
        ) tl on mb.mb_addidx = tl.tl_type_cd and tl.sort=1 and mb.mb_cret_id = tl.tl_cret_id
        where 1=1
            and mb.mb_cret_id = #{user_id}
            and si.si_active_yn = 'Y'
        <choose>
            <when test='cat == "찜"'>
                and mb.mb_save_yn ='Y'
            </when>
            <when test='cat == "지원"'>
                and mb.mb_req_save_yn = 'Y'
            </when>
            <when test='cat == "선정"'>
                and mb.mb_done_save_yn = 'Y'
            </when>
        </choose>
        order by
        <choose>
            <when test='ord == "인기순"'>
                view_cnt desc
            </when>
            <when test='ord == "금액높은순"'>
                target_cost_value desc
            </when>
            <when test='ord == "마감임박순"'>
                si_end_dt
            </when>
            <otherwise>
                <choose>
                    <when test='cat == "찜"'>
                        mb.mb_updt_dt desc
                    </when>
                    <when test='cat == "지원"'>
                        mb.mb_req_updt_dt desc
                    </when>
                    <when test='cat == "선정"'>
                        mb.mb_done_updt_dt desc
                    </when>
                </choose>
            </otherwise>
        </choose>
    </select>

    <select id="getCatList" parameterType="HashMap" resultType="HashMap">
        select  si.target_cat_cd as target_cat_name, count(*)
        from itda_app.my_bookmark mb
            left outer join itda_app.support_info si on mb.mb_addidx = si.si_idx
        where 1=1
          and mb.mb_cret_id = #{mb_cret_id}
          and mb.mb_save_yn = 'Y'
        group by si.target_cat_cd
    </select>

    <insert id="insertSavedMyBook" parameterType="HashMap">
        INSERT INTO itda_app.my_bookmark ( mb_addidx, mb_cret_id, mb_active_yn, mb_save_yn, mb_cret_dt, mb_updt_dt)
                                    VALUES (#{mb_addidx},#{mb_cret_id},'Y' ,'Y' , NOW() , NOW() )
        on conflict (mb_addidx, mb_cret_id) DO UPDATE
        SET
            mb_active_yn = 'Y'
            , mb_save_yn = 'Y'
            , mb_updt_dt = now()
    </insert>

    <update id="updateSavedMyBook" parameterType="HashMap">
        update itda_app.my_bookmark
            SET mb_save_yn = #{mb_save_yn}, mb_updt_dt = NOW()
        WHERE mb_addidx = #{mb_addidx} and mb_cret_id = #{mb_cret_id}
    </update>

    <update id="updateReqSavedMyBook" parameterType="HashMap">
        update itda_app.my_bookmark
        SET mb_req_save_yn = #{mb_req_save_yn}
          <if test='mb_req_cret_dt ==""'>
              ,mb_req_cret_dt = NOW()
          </if>
          <if test='mb_done_save_yn == "N"'>
              ,mb_done_save_yn = #{mb_done_save_yn}
          </if>
          ,mb_req_updt_dt = NOW()
        WHERE mb_addidx = #{mb_addidx} and mb_cret_id = #{mb_cret_id}
    </update>

    <update id="updateDoneSavedMyBook" parameterType="HashMap">
        update itda_app.my_bookmark
        SET mb_done_save_yn = #{mb_done_save_yn}
        <if test='mb_done_cret_dt ==""'>
            ,mb_done_cret_dt = NOW()
        </if>
        ,mb_done_updt_dt = NOW()
        WHERE mb_addidx = #{mb_addidx} and mb_cret_id = #{mb_cret_id}
    </update>

    <select id="getUserNeed" parameterType="HashMap" resultType="HashMap">
        select * from itda_web.user_need where user_id = #{user_id}
    </select>

    <insert id="insertUserNeed" parameterType="HashMap">
        insert into itda_web.user_need (user_id, financing, team_building, etc) values (#{user_id}, #{financing}, #{team_building}, #{etc})
    </insert>

    <update id="updateUserNeed" parameterType="HashMap">
        update itda_web.user_need set financing = #{financing} , team_building = #{team_building}, etc = #{etc} where idx = #{idx}
    </update>

    <insert id="insertDeliverEmail" parameterType="HashMap">
        update itda_app.usertable set deliver_email = #{deliver_email} where id = #{user_id}
    </insert>
</mapper>
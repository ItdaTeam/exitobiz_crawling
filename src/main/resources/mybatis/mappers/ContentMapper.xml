<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.kr.exitobiz.Mappers.Cms.ContentMapper">


  <select id="getContentList" parameterType="map" resultType="map">
    SELECT content_id, corp_cd, ccn.description as corp_nm, title, url, c.sort, "cost", img, active_yn, content_type, dtl.code_nm as content_type_nm, c.cret_dt, c.cret_id, c.updt_dt, c.updt_id
      FROM itda_app.contents c
      left outer join itda_web.common_code_dtl dtl on c.content_type = dtl.code and dtl.ctg_cd = 'content_type'
      left outer join itda_web.common_code_dtl ccn on c.corp_cd = ccn.code and ccn.ctg_Cd='corp_cd'
   WHERE 1=1
        and to_char(c.cret_dt, 'yyyy-mm-dd')::date between #{fromDate}::date and #{toDate}::date
    <if test="keyword != null">
      <choose>
        <when test="category == 'all'">
          AND
          <foreach collection="keyword" item="item"
                   index="index" open="(" close=")" separator="or">
            c.title LIKE '%' || #{item} || '%'
          </foreach>
        </when>
        <when test="category == 'title' ">
            <foreach collection="keyword" item="item"
                     index="index" open="(" close=")" separator="or">
                c.title LIKE '%' || #{item} || '%'
            </foreach>
        </when>
      </choose>
    </if>
  </select>

  <select id="getContent" parameterType="map" resultType="map">
        select content_id, corp_cd, title, url, sort, "cost", img, active_yn, content_type, cret_dt, cret_id, updt_dt, updt_id
        from itda_app.contents
        where 1=1
        and content_id = #{contentId}
  </select>

    <select id="getTopInfo" parameterType="map" resultType="map">
        select 'company' as type, corp_cd as code,(select description from itda_web.common_code_dtl where 1=1 and ctg_cd = 'corp_cd' and code = c.corp_cd) as name, count(*) as cnt
        from itda_app.contents c
        where 1=1
          and active_yn = 'Y'
        group by c.corp_cd
        union all
        select 'contents' as type, content_type as code,(select code_nm from itda_web.common_code_dtl where 1=1 and ctg_cd = 'content_type' and code = c.content_type) as name, count(*) as cnt
        from itda_app.contents c
        where 1=1
          and active_yn = 'Y'
        group by content_type

    </select>

  <insert id="saveContent" parameterType="map">
    INSERT INTO itda_app.contents
    (corp_cd, title, url, sort, "cost", img, active_yn, content_type, cret_dt, cret_id)
    VALUES(#{corpCd}, #{title}, #{url}, #{sort}::int4, #{cost}::int4, #{img}, #{activeYn}, #{contentType}, now(), #{cretId})
    ON CONFLICT(content_id)
        DO UPDATE
        set corp_cd = #{corpCd},
            sort = #{sort}::int4,
            img = #{img},
            content_type = #{contentType},
            url = #{url},
            title = #{title},
            cost = #{cost}::int4,
            active_yn = #{activeYn},
            updt_id = #{updtId},
            updt_dt = now()
  </insert>

  <update id="updateContent" parameterType="map">
    UPDATE itda_app.contents
    SET
          sort=#{sort},
          active_yn=#{activeYn},
          updt_dt=now(),
          updt_id=#{updtId}
    where 1=1
     and content_id=#{contentId}
  </update>

    <delete id="deleteContent" parameterType="map">
        delete from itda_app.contents
        where 1=1
            and content_id = #{contentId}

    </delete>



</mapper>